name: Generate F-Droid repo

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
  - cron: "45 2 * * *"

jobs:
  apps:
    name: "Generate repo from apps listing"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Create basic directory structure
        run: mkdir -p fdroid/repo

      - name: Restore correct mtime
        run: |
          sudo apt install git-restore-mtime 
          git restore-mtime

      - name: Install F-Droid server software
        run: |
         sudo apt-get install fdroidserver

      - name: Set up repo secrets
        run: |
          echo "${{ secrets.KEYSTORE_P12 }}" | base64 -d - > fdroid/keystore.p12

      - name: Fetch APK from Latest Release
        uses: actions/github-script@v6
        id: fetch_apk
        with:
          script: |
            const repo = 'DARC-e-V/50ohm-pocket';
            const token =  ${{ secrets.GH_ACCESS_TOKEN }};
  
            const response = await fetch(
              `https://api.github.com/repos/${repo}/releases`,
              {
                headers: { Authorization: `token ${token}` },
              }
            );
  
            if (!response.ok) {
              throw new Error(`Failed to fetch releases: ${response.statusText}`);
            }
  
            const releases = await response.json();
            const release = releases.find(r => r.draft) || releases[0]; // Prioritize drafts, fallback to latest
  
            if (!release) {
              throw new Error("No releases found!");
            }
  
            const apkAsset = release.assets.find(asset => asset.name.endsWith(".apk"));
            if (!apkAsset) {
              throw new Error("No APK found in the release!");
            }
  
            core.info(`Found APK: ${apkAsset.browser_download_url}`);
            core.setOutput("apk_url", apkAsset.browser_download_url);
      

      - name: Download APK
        run: wget ${{ steps.fetch_apk.outputs.apk_url }} -O app-latest.apk

      - name: Build F-Droid Repo
        run: |
          fdroid update
          fdroid build --clean

      - name: Commit Changes and Push
        env:
          GITHUB_TOKEN: ${{  secrets.GH_ACCESS_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update F-Droid repository with new APK"
          git push

      - name: Deploy to raw.githubusercontent.com
        run: |
          git branch -M main
          git remote set-url origin https://${{ secrets.GH_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main
