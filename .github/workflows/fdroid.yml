name: Generate F-Droid repo

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
  - cron: "45 2 * * *"

jobs:
  apps:
    name: "Generate repo from apps listing"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Create basic directory structure
        run: mkdir -p fdroid/repo

      - name: Restore correct mtime
        run: |
          sudo apt install git-restore-mtime 
          git restore-mtime

      - name: Install F-Droid server software
        run: |
         sudo apt-get install fdroidserver

      - name: Set up repo secrets
        run: |
          echo "${{ secrets.KEYSTORE_P12 }}" | base64 -d - > fdroid/keystore.p12

      - name: Get the latest release
        id: get-latest-release
        uses: actions/github-script@v6
        with:
          script: |
              const latestRelease = github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              console.log(JSON.stringify(latestRelease.data));
              return latestRelease.data;
      - name: Extract APK path
        id: extract-apk-path
        uses: actions/github-script@v6
        with:
          script: |
             const release = JSON.parse('${{ steps.get-latest-release.outputs.result }}');
             const assets = release.assets;
             const apkAsset = assets.find(asset => asset.name.endsWith('.apk'));
             core.setOutput('apk-path', apkAsset.url);

      - name: Print the APK path
        run: |
          echo "APK Path: ${{ steps.extract-apk-path.outputs.apk-path }}"

      - name: Download APK
        run: wget ${{ steps.extract-apk-path.outputs.apk-path }} -O app-latest.apk

      - name: Build F-Droid Repo
        run: |
          fdroid update
          fdroid build --clean

      - name: Commit Changes and Push
        env:
          GITHUB_TOKEN: ${{  secrets.GH_ACCESS_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update F-Droid repository with new APK"
          git push

      - name: Deploy to raw.githubusercontent.com
        run: |
          git branch -M main
          git remote set-url origin https://${{ secrets.GH_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main
